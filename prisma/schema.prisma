// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// File (Source)  -> file-path or URL
// Segment        -> Video + timestamp begin/end
// Video          -> timeline of segments
// Tag            -> apply metadata to the segments and videos
// TagType        -> type of tag (e.g. "author", "transcript_segment", "sentiment_segment", "language", "quality", "type", "description")

model File {
  id Int @id @default(autoincrement())

  name     String // filename
  location String // todo: check for file:// OR http://
  format   String // mp4, mov, avi, mkv, webm, etc.

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  video Video?
}

model Segment {
  id Int @id @default(autoincrement())

  source   Video @relation(fields: [sourceId], references: [id])
  sourceId Int
  begin    Float
  end      Float
  tags      Tag[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Video {
  id Int @id @default(autoincrement())

  name     String
  timeline Segment[]
  source   File? @relation(fields: [sourceId], references: [id])
  sourceId Int @unique
  tags     Tag[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tag {
  id Int @id @default(autoincrement())

  type  TagType @relation(fields: [key], references: [key])
  key   String
  value String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  segments Segment[]
  videos Video[]
}

model TagType {
  key String @id @unique

  name        String
  description String // describe what this tag is for
  format      String // todo: maybe regex for specififying hwo data should look?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // array of all tags using this type?
  instances Tag[]
}
